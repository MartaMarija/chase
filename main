CREATE OR REPLACE FUNCTION public.chasealgO(TEXT[], TEXT[][], TEXT[][], TEXT[][], TEXT[], TEXT) RETURNS INT 
AS $$
DECLARE 
	--stvaranje tablice
	brojAtributa INT;
	brojac INT;
	--definiranje
	pom INT;
	broj_f INT;
	stupac varchar;
    zavisnost varchar;
	i int;
	y int;
	red varchar[];
	stringZaDodavanje varchar;
	--provjera FZ
	broj_FZ int;
	a text;
	b text;
	broj int;
	znakovi text;
	broj_VZ int;
	ne_sadrzi boolean;
	duljina_ds int;
	desna_strana varchar[];
begin
	--stvaranje tablice
	drop table if exists pocetna_tablica;
	create table pocetna_tablica();
	brojAtributa := array_length($1, 1);
	brojac := 1;
	LOOP
	    EXIT WHEN brojac = brojAtributa + 1;
	   	EXECUTE 'ALTER TABLE pocetna_tablica ADD COLUMN ' || quote_ident($1[brojac]) || ' varchar(3);';
	    brojac := brojac + 1;
	END LOOP;
	--definiranje zavisnosti koju provjeravamo/punjenje tablice
	--punjenje tablice
	case 
		when $6 = 'FZ' then
			pom := 1;
		when $6 = 'VZ' then
			pom := 2;
		when $6 = 'ZS' then
			broj_f := array_length($5, 1);
			for i in 1..broj_f loop
				for y in 0..brojAtributa-1 loop
					stupac := (SELECT column_name FROM information_schema.columns WHERE table_schema = 'public' AND table_name = 'pocetna_tablica'
    					limit 1 offset y);
    				zavisnost := $5[i];
    				if zavisnost like '%' || stupac || '%' then
    					--red[y] := concat('a', y+1);
    					red[y] := '0';
					else
						red[y] := concat(i, y+1);
					end if;
    			end loop;
    			stringZaDodavanje := 'INSERT INTO pocetna_tablica VALUES (';
    			for y in 0..brojAtributa-2 loop	
	    			stringZaDodavanje := concat(stringZaDodavanje, '''', red[y], ''',');
    			end loop;
    			stringZaDodavanje := concat(stringZaDodavanje, '''', red[brojAtributa-1], ''');');
    			execute stringZaDodavanje;
   			end loop;
	end case;
	--provjera FZ
	broj_FZ := array_length($2, 1);
	for i in 1..broj_FZ loop
		a := $2[i][1];
		b := $2[i][2];
		broj := (select countRezultat from fz_count(a, b));
		if broj <> 0 then
			--uvijek a/0 lol
			znakovi := (select lijeva_strana from dohvati_lijevu_stranu(a, b));
			--raise notice 'znakovi: %', znakovi;
			PERFORM promijeni_desnu_stranu(a, b, znakovi);
		end if;
	end loop;
	--provjera VZ
	broj_VZ := array_length($3, 1);
	for i in 1..broj_VZ loop
		a := concat($3[i][1],' ', $3[i][2]);
		b := '';
		desna_strana := string_to_array($3[i][2], ' ');
		duljina_ds := array_length(desna_strana, 1);
		ne_sadrzi := true;
		for j in 1..brojAtributa loop
			ne_sadrzi := true;
			for k in 1..duljina_ds loop
				if $1[j] = desna_strana[k] then
					ne_sadrzi := false;
				end if;
			end loop;
			if ne_sadrzi = true then
				b := concat(b, ' ', $1[j]);
			end if;
		end loop;
		
	end loop;
	raise notice 'b: % --- a: %', b, a;
	return broj_FZ;
END $$
LANGUAGE plpgsql;


select chasealgO(ARRAY ['a','b','c','d'], array[['a b','c d'],['b','c']], array[['a c','b']], array[['a b', 'c', 'b d']], array['abc','bd'], 'ZS');

    				--raise notice 'cnt: %', cnt;
